// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/suyuan32/simple-admin-example-api/ent/course"
	"github.com/suyuan32/simple-admin-example-api/ent/exam"
	"github.com/suyuan32/simple-admin-example-api/ent/schema"
	"github.com/suyuan32/simple-admin-example-api/ent/student"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	courseMixin := schema.Course{}.Mixin()
	courseMixinFields0 := courseMixin[0].Fields()
	_ = courseMixinFields0
	courseFields := schema.Course{}.Fields()
	_ = courseFields
	// courseDescCreatedAt is the schema descriptor for created_at field.
	courseDescCreatedAt := courseMixinFields0[1].Descriptor()
	// course.DefaultCreatedAt holds the default value on creation for the created_at field.
	course.DefaultCreatedAt = courseDescCreatedAt.Default.(func() time.Time)
	// courseDescUpdatedAt is the schema descriptor for updated_at field.
	courseDescUpdatedAt := courseMixinFields0[2].Descriptor()
	// course.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	course.DefaultUpdatedAt = courseDescUpdatedAt.Default.(func() time.Time)
	// course.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	course.UpdateDefaultUpdatedAt = courseDescUpdatedAt.UpdateDefault.(func() time.Time)
	examMixin := schema.Exam{}.Mixin()
	examMixinFields0 := examMixin[0].Fields()
	_ = examMixinFields0
	examFields := schema.Exam{}.Fields()
	_ = examFields
	// examDescCreatedAt is the schema descriptor for created_at field.
	examDescCreatedAt := examMixinFields0[1].Descriptor()
	// exam.DefaultCreatedAt holds the default value on creation for the created_at field.
	exam.DefaultCreatedAt = examDescCreatedAt.Default.(func() time.Time)
	// examDescUpdatedAt is the schema descriptor for updated_at field.
	examDescUpdatedAt := examMixinFields0[2].Descriptor()
	// exam.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	exam.DefaultUpdatedAt = examDescUpdatedAt.Default.(func() time.Time)
	// exam.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	exam.UpdateDefaultUpdatedAt = examDescUpdatedAt.UpdateDefault.(func() time.Time)
	studentMixin := schema.Student{}.Mixin()
	studentMixinFields0 := studentMixin[0].Fields()
	_ = studentMixinFields0
	studentFields := schema.Student{}.Fields()
	_ = studentFields
	// studentDescCreatedAt is the schema descriptor for created_at field.
	studentDescCreatedAt := studentMixinFields0[1].Descriptor()
	// student.DefaultCreatedAt holds the default value on creation for the created_at field.
	student.DefaultCreatedAt = studentDescCreatedAt.Default.(func() time.Time)
	// studentDescUpdatedAt is the schema descriptor for updated_at field.
	studentDescUpdatedAt := studentMixinFields0[2].Descriptor()
	// student.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	student.DefaultUpdatedAt = studentDescUpdatedAt.Default.(func() time.Time)
	// student.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	student.UpdateDefaultUpdatedAt = studentDescUpdatedAt.UpdateDefault.(func() time.Time)
}
