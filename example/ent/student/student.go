// Code generated by ent, DO NOT EDIT.

package student

import (
	"time"
)

const (
	// Label holds the string label denoting the student type in the database.
	Label = "student"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldBirthAt holds the string denoting the birth_at field in the database.
	FieldBirthAt = "birth_at"
	// EdgeCourses holds the string denoting the courses edge name in mutations.
	EdgeCourses = "courses"
	// EdgeExams holds the string denoting the exams edge name in mutations.
	EdgeExams = "exams"
	// Table holds the table name of the student in the database.
	Table = "students"
	// CoursesTable is the table that holds the courses relation/edge. The primary key declared below.
	CoursesTable = "student_courses"
	// CoursesInverseTable is the table name for the Course entity.
	// It exists in this package in order to avoid circular dependency with the "course" package.
	CoursesInverseTable = "courses"
	// ExamsTable is the table that holds the exams relation/edge.
	ExamsTable = "exams"
	// ExamsInverseTable is the table name for the Exam entity.
	// It exists in this package in order to avoid circular dependency with the "exam" package.
	ExamsInverseTable = "exams"
	// ExamsColumn is the table column denoting the exams relation/edge.
	ExamsColumn = "student_exams"
)

// Columns holds all SQL columns for student fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
	FieldAge,
	FieldBirthAt,
}

var (
	// CoursesPrimaryKey and CoursesColumn2 are the table columns denoting the
	// primary key for the courses relation (M2M).
	CoursesPrimaryKey = []string{"student_id", "course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
