// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeInt8},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
	}
	// ExamsColumns holds the columns for the "exams" table.
	ExamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "score", Type: field.TypeUint8},
		{Name: "exam_courses", Type: field.TypeUint64, Nullable: true},
		{Name: "student_exams", Type: field.TypeUint64, Nullable: true},
	}
	// ExamsTable holds the schema information for the "exams" table.
	ExamsTable = &schema.Table{
		Name:       "exams",
		Columns:    ExamsColumns,
		PrimaryKey: []*schema.Column{ExamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exams_courses_courses",
				Columns:    []*schema.Column{ExamsColumns[4]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exams_students_exams",
				Columns:    []*schema.Column{ExamsColumns[5]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "name", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt8},
		{Name: "birth_at", Type: field.TypeTime},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
	}
	// StudentCoursesColumns holds the columns for the "student_courses" table.
	StudentCoursesColumns = []*schema.Column{
		{Name: "student_id", Type: field.TypeUint64},
		{Name: "course_id", Type: field.TypeUint64},
	}
	// StudentCoursesTable holds the schema information for the "student_courses" table.
	StudentCoursesTable = &schema.Table{
		Name:       "student_courses",
		Columns:    StudentCoursesColumns,
		PrimaryKey: []*schema.Column{StudentCoursesColumns[0], StudentCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "student_courses_student_id",
				Columns:    []*schema.Column{StudentCoursesColumns[0]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "student_courses_course_id",
				Columns:    []*schema.Column{StudentCoursesColumns[1]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		ExamsTable,
		StudentsTable,
		StudentCoursesTable,
	}
)

func init() {
	ExamsTable.ForeignKeys[0].RefTable = CoursesTable
	ExamsTable.ForeignKeys[1].RefTable = StudentsTable
	StudentsTable.Annotation = &entsql.Annotation{
		Table: "students",
	}
	StudentCoursesTable.ForeignKeys[0].RefTable = StudentsTable
	StudentCoursesTable.ForeignKeys[1].RefTable = CoursesTable
}
