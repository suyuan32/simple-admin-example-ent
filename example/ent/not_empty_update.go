// Code generated by ent, DO NOT EDIT.

package ent

// set field if value is not empty. e.g. string does not equal to ""
func (c *CourseUpdate) SetNotEmptyName(value string) *CourseUpdate {
	if value != "" {
		return c.SetName(value)
	}
	return c
}

// set field if value is not empty. e.g. string does not equal to ""
func (c *CourseUpdateOne) SetNotEmptyName(value string) *CourseUpdateOne {
	if value != "" {
		return c.SetName(value)
	}
	return c
}

// set field if value is not empty. e.g. string does not equal to ""
func (c *CourseUpdate) SetNotEmptyCode(value int8) *CourseUpdate {
	if value != 0 {
		return c.SetCode(value)
	}
	return c
}

// set field if value is not empty. e.g. string does not equal to ""
func (c *CourseUpdateOne) SetNotEmptyCode(value int8) *CourseUpdateOne {
	if value != 0 {
		return c.SetCode(value)
	}
	return c
}

// set field if value is not empty. e.g. string does not equal to ""
func (e *ExamUpdate) SetNotEmptyScore(value uint8) *ExamUpdate {
	if value != 0 {
		return e.SetScore(value)
	}
	return e
}

// set field if value is not empty. e.g. string does not equal to ""
func (e *ExamUpdateOne) SetNotEmptyScore(value uint8) *ExamUpdateOne {
	if value != 0 {
		return e.SetScore(value)
	}
	return e
}

// set field if value is not empty. e.g. string does not equal to ""
func (s *StudentUpdate) SetNotEmptyName(value string) *StudentUpdate {
	if value != "" {
		return s.SetName(value)
	}
	return s
}

// set field if value is not empty. e.g. string does not equal to ""
func (s *StudentUpdateOne) SetNotEmptyName(value string) *StudentUpdateOne {
	if value != "" {
		return s.SetName(value)
	}
	return s
}

// set field if value is not empty. e.g. string does not equal to ""
func (s *StudentUpdate) SetNotEmptyAge(value int8) *StudentUpdate {
	if value != 0 {
		return s.SetAge(value)
	}
	return s
}

// set field if value is not empty. e.g. string does not equal to ""
func (s *StudentUpdateOne) SetNotEmptyAge(value int8) *StudentUpdateOne {
	if value != 0 {
		return s.SetAge(value)
	}
	return s
}
