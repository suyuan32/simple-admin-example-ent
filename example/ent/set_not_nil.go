// Code generated by ent, DO NOT EDIT.

package ent

import "time"

// set field if value's pointer is not nil.
func (c *CourseUpdate) SetNotNilUpdatedAt(value *time.Time) *CourseUpdate {
	if value != nil {
		return c.SetUpdatedAt(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseUpdateOne) SetNotNilUpdatedAt(value *time.Time) *CourseUpdateOne {
	if value != nil {
		return c.SetUpdatedAt(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseCreate) SetNotNilUpdatedAt(value *time.Time) *CourseCreate {
	if value != nil {
		return c.SetUpdatedAt(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseUpdate) SetNotNilName(value *string) *CourseUpdate {
	if value != nil {
		return c.SetName(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseUpdateOne) SetNotNilName(value *string) *CourseUpdateOne {
	if value != nil {
		return c.SetName(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseCreate) SetNotNilName(value *string) *CourseCreate {
	if value != nil {
		return c.SetName(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseUpdate) SetNotNilCode(value *int8) *CourseUpdate {
	if value != nil {
		return c.SetCode(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseUpdateOne) SetNotNilCode(value *int8) *CourseUpdateOne {
	if value != nil {
		return c.SetCode(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (c *CourseCreate) SetNotNilCode(value *int8) *CourseCreate {
	if value != nil {
		return c.SetCode(*value)
	}
	return c
}

// set field if value's pointer is not nil.
func (e *ExamUpdate) SetNotNilUpdatedAt(value *time.Time) *ExamUpdate {
	if value != nil {
		return e.SetUpdatedAt(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExamUpdateOne) SetNotNilUpdatedAt(value *time.Time) *ExamUpdateOne {
	if value != nil {
		return e.SetUpdatedAt(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExamCreate) SetNotNilUpdatedAt(value *time.Time) *ExamCreate {
	if value != nil {
		return e.SetUpdatedAt(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExamUpdate) SetNotNilScore(value *uint8) *ExamUpdate {
	if value != nil {
		return e.SetScore(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExamUpdateOne) SetNotNilScore(value *uint8) *ExamUpdateOne {
	if value != nil {
		return e.SetScore(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExamCreate) SetNotNilScore(value *uint8) *ExamCreate {
	if value != nil {
		return e.SetScore(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilUpdatedAt(value *time.Time) *StudentUpdate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilUpdatedAt(value *time.Time) *StudentUpdateOne {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilUpdatedAt(value *time.Time) *StudentCreate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilName(value *string) *StudentUpdate {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilName(value *string) *StudentUpdateOne {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilName(value *string) *StudentCreate {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilAge(value *int8) *StudentUpdate {
	if value != nil {
		return s.SetAge(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilAge(value *int8) *StudentUpdateOne {
	if value != nil {
		return s.SetAge(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilAge(value *int8) *StudentCreate {
	if value != nil {
		return s.SetAge(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilBirthAt(value *time.Time) *StudentUpdate {
	if value != nil {
		return s.SetBirthAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilBirthAt(value *time.Time) *StudentUpdateOne {
	if value != nil {
		return s.SetBirthAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilBirthAt(value *time.Time) *StudentCreate {
	if value != nil {
		return s.SetBirthAt(*value)
	}
	return s
}
